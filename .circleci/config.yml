version: 2.1

parameters:
  workflow:
    type: enum
    default: auto
    description: The workflow to trigger.
    enum: [auto, manual]

executors:
  docker:
    docker:
      - image: docker:stable

jobs:
  hadolint:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Checking barenv-sandbox docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/sandbox.Dockerfile || true
      - run:
          name: Checking barenv-unsandbox docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/unsandbox.Dockerfile || true
  build-sandbox:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build sandbox image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/barenv-sandbox:$IMAGE_VERSION . -f build/sandbox.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/barenv-sandbox:$IMAGE_VERSION
  build-unsandbox:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build unsandbox image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/barenv-unsandbox:$IMAGE_VERSION . -f build/unsandbox.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/barenv-unsandbox:$IMAGE_VERSION

workflows:
  version: 2
  build-image-auto:
    when: { equal: [ auto, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
  build-image-manual:
    when: { equal: [ manual, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
      - build-sandbox:
          requires:
            - hadolint
      - build-unsandbox:
          requires:
            - hadolint