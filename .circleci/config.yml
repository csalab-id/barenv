version: 2.1

parameters:
  workflow:
    type: enum
    default: auto
    description: The workflow to trigger.
    enum: [auto, manual, all]

executors:
  docker:
    docker:
      - image: docker:stable

jobs:
  hadolint:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Checking thestrack-sandbox docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/sandbox.Dockerfile || true
      - run:
          name: Checking thestrack-unsandbox docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/unsandbox.Dockerfile || true
      - run:
          name: Checking thestrack-php5 docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/php5.Dockerfile || true
      - run:
          name: Checking thestrack-php7 docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/php7.Dockerfile || true
      - run:
          name: Checking thestrack-php8 docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/php8.Dockerfile || true
      - run:
          name: Checking thestrack-mailhog docker file code quality
          command: docker run --rm -i ghcr.io/hadolint/hadolint:latest < build/mailhog.Dockerfile || true
  build-sandbox:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build sandbox image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-sandbox:$IMAGE_VERSION . -f build/sandbox.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-sandbox:$IMAGE_VERSION
  build-unsandbox:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build unsandbox image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-unsandbox:$IMAGE_VERSION . -f build/unsandbox.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-unsandbox:$IMAGE_VERSION
  build-php5:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build php5 image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php5:$IMAGE_VERSION . -f build/php5.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php5:$IMAGE_VERSION
  build-php7:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build php7 image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php7:$IMAGE_VERSION . -f build/php7.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php7:$IMAGE_VERSION
  build-php8:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build php8 image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php8:$IMAGE_VERSION . -f build/php8.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-php8:$IMAGE_VERSION
  build-mailhog:
    executor: docker
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build mailhog image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin $DOCKER_REGISTRY
            docker build -t $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-mailhog:$IMAGE_VERSION . -f build/mailhog.Dockerfile
            docker push $DOCKER_REGISTRY/$REGISTRY_USER/thestrack-mailhog:$IMAGE_VERSION

workflows:
  version: 2
  build-image-auto:
    when: { equal: [ auto, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
  build-image-manual:
    when: { equal: [ manual, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
      - build-sandbox:
          requires:
            - hadolint
      - build-unsandbox:
          requires:
            - hadolint
  build-image-all:
    when: { equal: [ all, << pipeline.parameters.workflow >> ] }
    jobs:
      - hadolint
      - build-sandbox:
          requires:
            - hadolint
      - build-unsandbox:
          requires:
            - hadolint
      - build-php5:
          requires:
            - hadolint
      - build-php7:
          requires:
            - hadolint
      - build-php8:
          requires:
            - hadolint
      - build-mailhog:
          requires:
            - hadolint